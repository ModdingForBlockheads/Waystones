plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id 'idea'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

def buildNumber = System.getenv("GPR_BUILD_NUMBER") ? "+" + System.getenv("GPR_BUILD_NUMBER") : ""
version = mod_version + buildNumber

archivesBaseName = "${mod_id}-fabric-${minecraft_version}"
group = mod_group

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.officialMojangMappings()
	
	modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
	implementation project(":shared")

	modImplementation "net.blay09.mods:balm-fabric:${balm_fabric_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "curse.maven:modmenu-308702:3348711"

	modCompileOnly "curse.maven:xaerosminimap-263420:3582979"
	// Roughly Enough Items
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:6.0.264-alpha"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:6.0.264-alpha"
	modCompileOnly "me.shedaniel:architectury:2.0.9"

	implementation "org.jetbrains:annotations:22.0.0"
}

loom {
	runs {
		client {
			client()
			setConfigName("fabric Client")
			ideConfigGenerated(true)
			runDir("run")
		}
		server {
			server()
			setConfigName("fabric Server")
			ideConfigGenerated(true)
			runDir("run")
		}
	}
}

processResources {
	from project(":shared").sourceSets.main.resources
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
    source(project(":shared").sourceSets.main.allSource)
}

jar {
	from("LICENSE") {
		rename { "${it}_${mod_id}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = mod_id + "-fabric"

			from components.java
		}
	}

	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/" + github_repo)
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
			}
		}
	}
}

curseforge {
	apiKey = project.findProperty("curseforge.api_key") ?: System.getenv("CF_API_KEY") ?: "none"
	project {
		id = curseforge_fabric_project_id
		releaseType = curseforge_release_type
		changelogType = 'markdown'
		changelog = file('../changelog.md')
		addGameVersion minecraft_version
		addGameVersion 'Fabric'

		relations {
			requiredLibrary 'balm-fabric'
		}

		mainArtifact(remapJar)

		afterEvaluate {
			uploadTask.dependsOn(remapJar)
		}
	}
	options {
		forgeGradleIntegration = false
	}
}